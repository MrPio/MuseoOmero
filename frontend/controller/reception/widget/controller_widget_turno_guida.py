#######################################################
# 
# ControllerWidgetTurnoGuida.py
# Python implementation of the Class ControllerWidgetTurnoGuida
# Generated by Enterprise Architect
# Created on:      07-ott-2022 17:39:59
# Original author: ValerioMorelli
# 
#######################################################

from backend.high_level.gestione_interna.turno_guida import TurnoGuida
from backend.high_level.museo import Museo
from frontend.controller.amministrazione.controller_modifica_turno_guida import ControllerModificaTurnoGuida
from frontend.controller.controller import Controller
from frontend.view.reception.vista_modifica_turno_guida import VistaModificaTurnoGuida
from frontend.view.reception.widget.widget_turno_guida import WidgetTurnoGuida


class ControllerWidgetTurnoGuida(Controller):

    def __init__(self, view: WidgetTurnoGuida, model: TurnoGuida, parent: Controller):
        super().__init__(view)
        self.view: WidgetTurnoGuida = view
        self.model = model
        self.parent = parent
        self.selected=False

        self.showView()
        self.connettiEventi()
        self.initializeUi()

    def __onSelezionaClicked(self) -> None:
        for controller in self.parent.turni_guida:
            controller.view.setEnabled(True)
            controller.selected=False
            controller.initializeUi()
        self.view.setEnabled(False)
        self.selected=True
        self.initializeUi()
        self.parent.previous.model.guida=self.model

    def __onRimuoviButton(self) -> None:
        # rimuovo il turno alla guida
        self.model.guida.turni.remove(self.model)
        # rimuovo il turno dal museo (db)
        Museo.getInstance().turni_guida.remove(self.model)
        self.parent.initializeUi()

    def __onModificaButton(self) -> None:
        self.next = ControllerModificaTurnoGuida(
            view=VistaModificaTurnoGuida(),
            previous=self.parent,
            model=self.model,
        )
        self.next.guida = self.model.guida

        self.parent.disableView()

    def connettiEventi(self) -> None:
        super().connettiEventi()
        self.view.getRimuoviButton().clicked.connect(self.__onRimuoviButton)
        self.view.getModificaButton().clicked.connect(self.__onModificaButton)
        self.view.getSelezionaButton().clicked.connect(self.__onSelezionaClicked)

    def initializeUi(self) -> None:
        self.parent.strategy.initializeWidgetUi(self)
        self.view.getNomeLabel().setText(self.model.guida.dipendente.nome + ' ' + self.model.guida.dipendente.cognome)
        self.view.getOrarioLabel().setText('{}-{}'.format(
            self.model.data_inizio.strftime('%H:%M'),
            self.model.data_fine.strftime('%H:%M'),
        ))
        self.view.getPostiDisponibiliLabel().setText('posti liberi {}/{}'.format(
            self.model.numero_prenotati+self.selected , self.model.capienza))
