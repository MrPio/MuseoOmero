#######################################################
# 
# ControllerInserisciDatiCliente.py
# Python implementation of the Class ControllerInserisciDatiCliente
# Generated by Enterprise Architect
# Created on:      07-ott-2022 17:39:59
# Original author: ValerioMorelli
# 
#######################################################
import os
import tempfile
from datetime import datetime

from backend.high_level.clientela.enum.sesso import Sesso
from backend.high_level.clientela.visitatore import Visitatore
from backend.high_level.museo import Museo
from frontend.controller.controller import Controller
from frontend.view.reception.vista_inserisci_dati_cliente import VistaInserisciDatiCliente


class ControllerInserisciDatiCliente(Controller):

    def __gotoPrevious(self) -> None:
        self.closeView()
        self.previous.closeView()
        self.previous.previous.enableView()

    def __init__(self, view: VistaInserisciDatiCliente, previous: Controller, model: Visitatore):
        super().__init__(view)
        self.view: VistaInserisciDatiCliente = view
        self.previous = previous
        self.model = model
        self.previous.disableView()
        self.connettiEventi()
        self.initializeUi()
        self.showView()

    def __onConfermaClicked(self) -> None:
        try:
            datetime.strptime(self.view.getDataNascitaLineEdit().text(), '%d/%m/%Y')
        except Exception as e:
            print(e)
            self.view.getErrorLabel().setVisible(True)
            return
        if len(self.view.getProvenienzaLineEdit().text())<3:
            self.view.getErrorLabel().setVisible(True)
            return

        birth = datetime.strptime(self.view.getDataNascitaLineEdit().text(), '%d/%m/%Y')

        if len(self.view.getProvenienzaLineEdit().text()) > 0:
            self.model.data_nascita=birth
            self.model.sesso=Sesso[self.view.getSessoComboBox().currentText().upper().replace(' ', '_')]
            self.model.provenienza=self.view.getProvenienzaLineEdit().text()
            self.model.biglietti.append(self.previous.model)
            Museo.getInstance().visitatori.append(self.model)
            self.notifica('Biglietto Acquistato', f'Biglietto acquistato con successo! \r\n'
                                                  f' ID --> {self.previous.model.qr_code.id}')

            path = tempfile.gettempdir() + '/qrcode.jpg'
            self.previous.model.qr_code.getImage().convert('RGB').save(path)
            os.startfile(path)

            self.closeView()
            self.previous.previous.enableView()
            self.previous.previous.showView()

    def connettiEventi(self) -> None:
        super().connettiEventi()
        self.view.getPreviousButton().mouseReleaseEvent = lambda _: self.__gotoPrevious()
        self.view.getConfermaButton().clicked.connect(self.__onConfermaClicked)

    def initializeUi(self) -> None:
        self.view.getErrorLabel().setVisible(False)

