#######################################################
# 
# ControllerGestioneDonazioni.py
# Python implementation of the Class ControllerGestioneDonazioni
# Generated by Enterprise Architect
# Created on:      07-ott-2022 17:39:58
# Original author: ValerioMorelli
# 
#######################################################
from backend.high_level.museo import Museo
from backend.high_level.personale.segreteria import Segreteria
from frontend.controller.controller import Controller
from frontend.controller.segreteria.widget.controller_widget_richiesta_donazione import \
    ControllerWidgetRichiestaDonazione
from frontend.view.segreteria.vista_gestione_donazioni import VistaGestioneDonazioni
from frontend.view.segreteria.widget.widget_richiesta_donazione import WidgetRichiestaDonazione


class ControllerGestioneDonazioni(Controller):

    def __gotoPrevious(self) -> None:
        self.closeView()
        self.previous.initializeUi()
        self.previous.enableView()

    def __init__(self, view: VistaGestioneDonazioni, previous: Controller, model: Museo):
        super().__init__(view)
        self.view: VistaGestioneDonazioni = view
        self.previous = previous
        self.model = model
        self.connettiEventi()

    def connettiEventi(self) -> None:
        self.view.getPreviousButton().mouseReleaseEvent = lambda _: self.__gotoPrevious()
        # TODO listView

    def __renderizzaRichiestaDonazioni(self) -> list[ControllerWidgetRichiestaDonazione]:
        result = []

        for posto_lavoro in self.model.posti_lavoro:
            if type(posto_lavoro) == Segreteria:
                for richiesta_donazione in posto_lavoro.richiesta_donazione:
                    new_widget = WidgetRichiestaDonazione(self.view.scrollAreaWidgetContents)
                    result.append(ControllerWidgetRichiestaDonazione(
                        view=new_widget,
                        model=richiesta_donazione,
                    ))
                    return result
