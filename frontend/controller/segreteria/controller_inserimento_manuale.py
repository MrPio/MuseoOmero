#######################################################
# 
# ControllerInserimentoManuale.py
# Python implementation of the Class ControllerInserimentoManuale
# Generated by Enterprise Architect
# Created on:      07-ott-2022 17:39:59
# Original author: ValerioMorelli
# 
#######################################################
from datetime import datetime

from backend.high_level.clientela.abbonamento import Abbonamento
from backend.high_level.clientela.biglietto import Biglietto
from backend.high_level.clientela.cliente import Cliente
from backend.high_level.museo import Museo
from frontend.controller.controller import Controller
from frontend.controller.segreteria.strategy_convalida.strategy_convalida import StrategyConvalida
from frontend.view.segreteria.vista_inserimento_manuale import VistaInserimentoManuale


class ControllerInserimentoManuale(Controller):

    def __gotoPrevious(self) -> None:
        self.closeView()
        self.previous.enableView()

    def __init__(self, view: VistaInserimentoManuale, previous: Controller, model: Museo, strategy: StrategyConvalida):
        super().__init__(view)
        self.view: VistaInserimentoManuale = view
        self.previous: Controller = previous
        self.model = model
        self.strategy = strategy
        self.strategy.initializeUi(self.previous)
        self.previous.disableView()
        self.connettiEventi()
        self.initializeUi()
        self.showView()

        cliente = Cliente(
            nome='Mario',
            cognome='Rossi',
            codFis="RSSMRA01E07D546X",
            email="email@gmail.com",
            tel="3466787656",
        )
        abbonamento = Abbonamento(dataRilascio=datetime(2022,1,1))
        abbonamento.qr_code.id="AAAAAAAAAA"
        cliente.abbonamenti.append(abbonamento)
        model.visitatori.append(cliente)

    def __onConfermaClicked(self) -> None:
        id = self.view.getIdLineEdit().text()
        if len(id) == 11:
            if self.strategy.finalizza(self.previous, id.replace('-', '')):
                self.previous.enableView()
                self.closeView()
            # self.closeView()
            # self.previous.previous.showView()
            # self.previous.enableView()

    def connettiEventi(self) -> None:
        super().connettiEventi()
        self.view.getPreviousButton().mouseReleaseEvent = lambda _: self.__gotoPrevious()
        self.view.getConfermaButton().clicked.connect(self.__onConfermaClicked)
