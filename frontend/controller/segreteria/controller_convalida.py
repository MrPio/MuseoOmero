#######################################################
# 
# ControllerConvalida.py
# Python implementation of the Class ControllerConvalida
# Generated by Enterprise Architect
# Created on:      07-ott-2022 17:39:58
# Original author: ValerioMorelli
# 
#######################################################
import cv2
import winotify

from backend.high_level.clientela.cliente import Cliente
from frontend.controller.controller import Controller
from frontend.controller.segreteria.controller_inserimento_manuale import ControllerInserimentoManuale
from frontend.controller.segreteria.strategy_convalida.strategy_convalida import StrategyConvalida
from frontend.controller.segreteria.strategy_convalida.strategy_convalida_abbonamento import \
    StrategyConvalidaAbbonamento
from frontend.ui.location import UI_DIR
from frontend.view.segreteria.vista_convalida import VistaConvalida
from frontend.view.segreteria.vista_inserimento_manuale import VistaInserimentoManuale


class ControllerConvalida(Controller):

    def __gotoPrevious(self) -> None:
        self.closeView()
        self.previous.initializeUi()
        self.previous.enableView()

    def __init__(self, view: VistaConvalida, previous: Controller, strategy: StrategyConvalida):
        super().__init__(view)
        self.view: VistaConvalida = view
        self.previous: Controller = previous
        self.strategy: StrategyConvalida = strategy
        self.risultato:str = ''

    def __gotoVistaInserimentoManuale(self) -> None:
        self.next = ControllerInserimentoManuale(
            view=VistaInserimentoManuale,
            previous=self,
            strategy=StrategyConvalidaAbbonamento(),
        )
        self.next.connettiEventi()
        self.next.showView()
        self.disableView()

    def __onScannerizzaClicked(self) -> None:
        cap = cv2.VideoCapture(0)
        # initialize the cv2 QRCode detector
        detector = cv2.QRCodeDetector()
        id = ''
        while True:
            _, img = cap.read()
            data, bbox, _ = detector.detectAndDecode(img)
            # check if there is a QRCode in the image
            if data:
                result = data
                break
            cv2.imshow("QRCODEscanner", img)
            if cv2.waitKey(1) == ord("q"):
                break
        cap.release()
        cv2.destroyAllWindows()

        for cliente in list(filter(lambda visitatore: type(visitatore) == Cliente, self.model.visitatori)):
            for abbonamento in cliente.abbonamenti:
                if id == abbonamento.qr_code.id:
                    self.finalizza(abbonamento)
                    return
        winotify.Notification(
            app_id='Museo Omero',
            title='Abbonamento non trovato',
            msg='Spiacenti, non Ã¨ stato trovato alcun abbonamento relativo al codice inserito. '
                'Prova a ripetere la scannerizzazione',
            icon=UI_DIR + '/ico/museum_white.ico',
            duration='short',
        ).show()

    def connettiEventi(self) -> None:
        self.view.getPreviousButton().mouseReleaseEvent = lambda _: self.__gotoPrevious()
        self.view.getInserisciManualmenteButton().clicked.connect(self.__gotoVistaInserimentoManuale())
        self.view.getScannerizzaButton().clicked.connect(self.__onScannerizzaClicked)


    def initializeUi(self) -> None:
        self.strategy.initializeUi(self)
        #TODO

    def finalizza(self,abbonamento:'Abbonamento') -> None:
        self.strategy.abbonamento=abbonamento
        self.strategy.finalizza(self)
        self.closeView()
        self.previous.enableView()
